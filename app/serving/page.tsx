"use client"

import { useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Coffee, ImageIcon, Info, CheckCircle } from "lucide-react"
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog"

const servingRules = {
  straws: {
    title: "+ –¢—Ä—É–±–æ—á–∫–∞",
    icon: "ü•§",
    description: "–ù–∞–ø–æ—ó, —è–∫—ñ –ø–æ–¥–∞—é—Ç—å—Å—è –∑ —Ç—Ä—É–±–æ—á–∫–æ—é",
    items: [
      {
        id: 1,
        name: "–°–æ–∫–∏",
        description: "–°–≤—ñ–∂–æ–≤–∏—á–∞–≤–ª–µ–Ω—ñ —Ç–∞ –ø–∞–∫–µ—Ç–æ–≤–∞–Ω—ñ —Å–æ–∫–∏",
        rules: ["–û–±–æ–≤'—è–∑–∫–æ–≤–æ –∑ —Ç—Ä—É–±–æ—á–∫–æ—é", "–¢—Ä—É–±–æ—á–∫–∞ –º–∞—î –±—É—Ç–∏ –≤ —É–ø–∞–∫–æ–≤—Ü—ñ –¥–æ –º–æ–º–µ–Ω—Ç—É –ø–æ–¥–∞—á—ñ"],
        image: "/placeholder.svg?height=300&width=400",
      },
      {
        id: 2,
        name: "–ö–æ–∫—Ç–µ–π–ª—ñ",
        description: "–ê–ª–∫–æ–≥–æ–ª—å–Ω—ñ —Ç–∞ –±–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ñ –∫–æ–∫—Ç–µ–π–ª—ñ",
        rules: ["–ü–æ–¥–∞—Ç–∏ –Ω–∞ –ø—ñ–¥–Ω–æ—Å—ñ –∑ —Ç—Ä—É–±–æ—á–∫–æ—é"],
        image: "/placeholder.svg?height=300&width=400",
      },
      {
        id: 3,
        name: "–§—Ä–µ—à—ñ",
        description: "–°–≤—ñ–∂–æ–≤–∏—á–∞–≤–ª–µ–Ω—ñ —Å–æ–∫–∏ –∑ —Ñ—Ä—É–∫—Ç—ñ–≤",
        rules: ["–ü–æ–¥–∞–≤–∞—Ç–∏ –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è", "–ó —Ç—Ä—É–±–æ—á–∫–æ—é"],
        image: "/placeholder.svg?height=300&width=400",
      },
    ],
  },
  coffee: {
    title: "–ó –ø–µ—á–µ–≤–æ–º, –ª–æ–∂–∫–æ—é —Ç–∞ –±–ª—é–¥—Ü–µ–º",
    icon: "‚òï",
    description: "–ö–∞–≤–æ–≤—ñ –Ω–∞–ø–æ—ó –∑ –ø–æ–≤–Ω–∏–º —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è",
    items: [
      {
        id: 4,
        name: "–†—ñ—Å—Ç—Ä–µ—Ç—Ç–æ",
        description: "–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–æ–≤–∞–Ω–∏–π –µ—Å–ø—Ä–µ—Å–æ, –º–µ–Ω—à–∏–π –æ–±'—î–º",
        rules: [
          "–ü–æ–¥–∞–≤–∞—Ç–∏ –≤ –º–∞–ª–µ–Ω—å–∫—ñ–π –∫–∞–≤–æ–≤—ñ–π —á–∞—à—Ü—ñ (60-70 –º–ª)",
          "–ù–∞ –±–ª—é–¥—Ü—ñ –∑ –∫–∞–≤–æ–≤–æ—é –ª–æ–∂–µ—á–∫–æ—é",
          "–ü–µ—á–µ–≤–æ –∞–±–æ —Ü—É–∫–µ—Ä–∫–∞ –Ω–∞ –±–ª—é–¥—Ü—ñ",
          "–ü–æ–¥–∞–≤–∞—Ç–∏ –≥–∞—Ä—è—á–∏–º –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è",
        ],
        volume: "15-20 –º–ª",
        temperature: "65-70¬∞C",
        image: "/placeholder.svg?height=300&width=400",
      },
      {
        id: 5,
        name: "–ï—Å–ø—Ä–µ—Å–æ",
        description: "–ö–ª–∞—Å–∏—á–Ω–∏–π —ñ—Ç–∞–ª—ñ–π—Å—å–∫–∏–π –∫–∞–≤–æ–≤–∏–π –Ω–∞–ø—ñ–π",
        rules: [
          "–ü–æ–¥–∞–≤–∞—Ç–∏ –≤ –∫–∞–≤–æ–≤—ñ–π —á–∞—à—Ü—ñ (70-80 –º–ª)",
          "–ù–∞ –±–ª—é–¥—Ü—ñ –∑ –∫–∞–≤–æ–≤–æ—é –ª–æ–∂–µ—á–∫–æ—é",
          "–ü–µ—á–µ–≤–æ –Ω–∞ –±–ª—é–¥—Ü—ñ",
          "–û–∫—Ä–µ–º–æ —Å–∫–ª—è–Ω–∫–∞ –≤–æ–¥–∏ —Ç–∞ –¥–æ—â–µ—á–∫–∞ –∑–∞–º—ñ—Å—Ç—å –±–ª—é–¥—Ü—è –¥–ª—è –≤–æ–¥–∏",
          "–ü–æ–¥–∞–≤–∞—Ç–∏ –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è",
        ],
        volume: "25-30 –º–ª",
        temperature: "65-70¬∞C",
        special: "–ó –≤–æ–¥–æ—é —Ç–∞ –¥–æ—â–µ—á–∫–æ—é",
        image: "/placeholder.svg?height=300&width=400",
      },
      {
        id: 6,
        name: "–ê–º–µ—Ä–∏–∫–∞–Ω–æ",
        description: "–ï—Å–ø—Ä–µ—Å–æ, —Ä–æ–∑–±–∞–≤–ª–µ–Ω–∏–π –≥–∞—Ä—è—á–æ—é –≤–æ–¥–æ—é",
        rules: [
          "–ü–æ–¥–∞—î—Ç—å—Å—è –∑ –±–∞—Ä—É –≤ –±—ñ–ª—å—à—ñ–π –∫–∞–≤–æ–≤—ñ–π —á–∞—à—Ü—ñ",
          "–ù–∞ –±–ª—é–¥—Ü—ñ –∑ –∫–∞–≤–æ–≤–æ—é –ª–æ–∂–µ—á–∫–æ—é",
          "–ü–µ—á–µ–≤–æ –Ω–∞ –±–ª—é–¥—Ü—ñ",
          "–ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –º–æ–ª–æ–∫–æ –æ–∫—Ä–µ–º–æ –∑–∞ –±–∞–∂–∞–Ω–Ω—è–º",
        ],
        volume: "90 –º–ª",
        temperature: "65-70¬∞C",
        image: "/placeholder.svg?height=300&width=400",
      },
      {
        id: 7,
        name: "–î–æ–ø—ñ–æ",
        description: "–ü–æ–¥–≤—ñ–π–Ω–∏–π –µ—Å–ø—Ä–µ—Å–æ",
        rules: ["–ù–∞ –±–ª—é–¥—Ü—ñ –∑ –∫–∞–≤–æ–≤–æ—é –ª–æ–∂–µ—á–∫–æ—é", "–ü–µ—á–µ–≤–æ –Ω–∞ –±–ª—é–¥—Ü—ñ", "–ü–æ–¥–∞–≤–∞—Ç–∏ –≥–∞—Ä—è—á–∏–º –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è"],
        volume: "60 –º–ª",
        temperature: "65-70¬∞C",
        image: "/placeholder.svg?height=300&width=400",
      },
    ],
  },
  beer: {
    title: "–ë–æ—á–æ–Ω–æ–∫ –∑ —Å–æ–Ω—è—à–Ω–∏–∫–æ–≤–∏–º –Ω–∞—Å—ñ–Ω–Ω—è–º",
    icon: "üç∫",
    description: '–°–ø–µ—Ü—ñ–∞–ª—å–Ω–µ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è –¥–ª—è –ø–∏–≤–∞ "–°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ"',
    items: [
      {
        id: 8,
        name: "1 –ª—ñ—Ç—Ä–æ–≤–µ –ø–∏–≤–æ",
        description: "–í–µ–ª–∏–∫–∞ –ø–æ—Ä—Ü—ñ—è –ø–∏–≤–∞ –∑ —Ç—Ä–∞–¥–∏—Ü—ñ–π–Ω–æ—é –∑–∞–∫—É—Å–∫–æ—é",
        rules: ["–û–±–æ–≤'—è–∑–∫–æ–≤–æ –∑ –±–æ—á–æ–Ω–∫–æ–º —Å–æ–Ω—è—à–Ω–∏–∫–æ–≤–æ–≥–æ –Ω–∞—Å—ñ–Ω–Ω—è", "–ë–æ—á–æ–Ω–æ–∫ —Å—Ç–∞–≤–∏—Ç–∏ –ø–æ—Ä—É—á –∑ –∫–µ–ª–∏—Ö–æ–º", "–ü—ñ–Ω–∞ 2-3 —Å–º"],
        volume: "1000 –º–ª",
        special: "–ó –±–æ—á–æ–Ω–∫–æ–º —Å–æ–Ω—è—à–Ω–∏–∫–æ–≤–æ–≥–æ –Ω–∞—Å—ñ–Ω–Ω—è",
        image: "/placeholder.svg?height=300&width=400",
      },
    ],
  },
}

export default function ServingPage() {
  const [selectedCategory, setSelectedCategory] = useState("straws")
  const [selectedItem, setSelectedItem] = useState<any>(null)

  const currentCategory = servingRules[selectedCategory as keyof typeof servingRules]

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">–°–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è</h1>
        <p className="text-gray-600">–ü—Ä–∞–≤–∏–ª–∞ –ø–æ–¥–∞—á—ñ –Ω–∞–ø–æ—ó–≤ —Ç–∞ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è –¥–ª—è –ø–æ–º—ñ—á–Ω–∏–∫—ñ–≤ –æ—Ñ—ñ—Ü—ñ–∞–Ω—Ç—ñ–≤</p>
      </div>

      {/* FF Notice */}
      <div className="mb-6 p-4 bg-blue-50 border border-blue-200 rounded-md">
        <div className="text-sm text-blue-800">
          <strong>FF:</strong> –§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –ø—Ä–∏–∫–ª–∞–¥—ñ–≤ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è –±—É–¥—É—Ç—å –¥–æ–¥–∞–Ω—ñ –ø—ñ—Å–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ–¥—ñ–∞ —Å–µ—Ä–≤–µ—Ä–∞
        </div>
      </div>

      <Tabs value={selectedCategory} onValueChange={setSelectedCategory} className="w-full">
        <TabsList className="grid w-full grid-cols-3 mb-8">
          <TabsTrigger value="straws" className="flex items-center">
            ü•§ –ó —Ç—Ä—É–±–æ—á–∫–æ—é
          </TabsTrigger>
          <TabsTrigger value="coffee" className="flex items-center">
            ‚òï –ö–∞–≤–∞ –∑ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è
          </TabsTrigger>
          <TabsTrigger value="beer" className="flex items-center">
            üç∫ –ü–∏–≤–æ –∑ –Ω–∞—Å—ñ–Ω–Ω—è–º
          </TabsTrigger>
        </TabsList>

        <TabsContent value={selectedCategory}>
          {/* Category Header */}
          <Card className="mb-8 border-orange-200 bg-orange-50">
            <CardHeader>
              <CardTitle className="flex items-center text-xl">
                <span className="text-2xl mr-3">{currentCategory.icon}</span>
                {currentCategory.title}
              </CardTitle>
              <CardDescription className="text-base">{currentCategory.description}</CardDescription>
            </CardHeader>
          </Card>

          {/* Items Grid */}
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {currentCategory.items.map((item) => (
              <Card key={item.id} className="hover:shadow-lg transition-shadow border-orange-100">
                <CardHeader>
                  <CardTitle className="text-lg">{item.name}</CardTitle>
                  <CardDescription>{item.description}</CardDescription>
                  {item.volume && <Badge className="bg-blue-100 text-blue-800 w-fit">–û–±'—î–º: {item.volume}</Badge>}
                  {item.temperature && (
                    <Badge className="bg-red-100 text-red-800 w-fit">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {item.temperature}</Badge>
                  )}
                  {item.special && (
                    <Badge className="bg-yellow-100 text-yellow-800 w-fit">–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å: {item.special}</Badge>
                  )}
                </CardHeader>
                <CardContent>
                  {/* Photo Placeholder */}
                  <div className="mb-4 bg-gray-100 rounded-lg h-48 flex items-center justify-center">
                    <div className="text-center text-gray-500">
                      <ImageIcon className="h-12 w-12 mx-auto mb-2" />
                      <p className="text-sm">–§–æ—Ç–æ –ø—Ä–∏–∫–ª–∞–¥ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è</p>
                      <p className="text-xs">–ë—É–¥–µ –¥–æ–¥–∞–Ω–æ –ø—ñ–∑–Ω—ñ—à–µ</p>
                    </div>
                  </div>

                  {/* Rules Preview */}
                  <div className="mb-4">
                    <h4 className="font-medium mb-2 text-sm">–û—Å–Ω–æ–≤–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞:</h4>
                    <ul className="space-y-1">
                      {item.rules.slice(0, 2).map((rule: string, index: number) => (
                        <li key={index} className="flex items-start text-xs text-gray-600">
                          <CheckCircle className="h-3 w-3 text-green-500 mr-1 mt-0.5 flex-shrink-0" />
                          {rule}
                        </li>
                      ))}
                      {item.rules.length > 2 && (
                        <li className="text-xs text-gray-500">+ —â–µ {item.rules.length - 2} –ø—Ä–∞–≤–∏–ª...</li>
                      )}
                    </ul>
                  </div>

                  {/* Examples */}
                  {item.examples && (
                    <div className="mb-4">
                      <h4 className="font-medium mb-2 text-sm">–ü—Ä–∏–∫–ª–∞–¥–∏:</h4>
                      <div className="flex flex-wrap gap-1">
                        {item.examples.slice(0, 2).map((example: string, index: number) => (
                          <Badge key={index} variant="outline" className="text-xs">
                            {example}
                          </Badge>
                        ))}
                        {item.examples.length > 2 && (
                          <Badge variant="outline" className="text-xs">
                            +{item.examples.length - 2}
                          </Badge>
                        )}
                      </div>
                    </div>
                  )}

                  <div className="flex space-x-2">
                    <Dialog>
                      <DialogTrigger asChild>
                        <Button
                          variant="outline"
                          className="flex-1 border-orange-200 text-orange-600 hover:bg-orange-50"
                        >
                          <ImageIcon className="h-4 w-4 mr-2" />
                          –§–æ—Ç–æ
                        </Button>
                      </DialogTrigger>
                      <DialogContent className="sm:max-w-md">
                        <DialogHeader>
                          <DialogTitle>{item.name} - –ü—Ä–∏–∫–ª–∞–¥ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è</DialogTitle>
                          <DialogDescription>ÔøΩÔøΩ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è</DialogDescription>
                        </DialogHeader>
                        <div className="grid gap-4 py-4">
                          <div className="relative h-60 w-full bg-gray-100 rounded-md flex items-center justify-center">
                            <div className="text-center text-gray-500">
                              <ImageIcon className="h-16 w-16 mx-auto mb-4" />
                              <p className="text-lg font-medium mb-2">–§–æ—Ç–æ –ø—Ä–∏–∫–ª–∞–¥</p>
                              <p className="text-sm">–ü—Ä–∞–≤–∏–ª—å–Ω–µ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è {item.name.toLowerCase()}</p>
                            </div>
                          </div>
                        </div>
                        <div className="p-4 bg-blue-50 border border-blue-200 rounded-md text-sm text-blue-800">
                          <strong>FF:</strong> –§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –ø—Ä–∏–∫–ª–∞–¥—ñ–≤ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è –±—É–¥—É—Ç—å –¥–æ–¥–∞–Ω—ñ –ø—ñ—Å–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ–¥—ñ–∞
                          —Å–µ—Ä–≤–µ—Ä–∞
                        </div>
                      </DialogContent>
                    </Dialog>

                    <Button className="flex-1 bg-orange-500 hover:bg-orange-600" onClick={() => setSelectedItem(item)}>
                      –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </TabsContent>
      </Tabs>

      {/* Detailed Item Dialog */}
      {selectedItem && (
        <Dialog open={!!selectedItem} onOpenChange={(open) => !open && setSelectedItem(null)}>
          <DialogContent className="sm:max-w-2xl">
            <DialogHeader>
              <DialogTitle className="flex items-center">
                <span className="text-2xl mr-3">{currentCategory.icon}</span>
                {selectedItem.name}
              </DialogTitle>
              <DialogDescription>{selectedItem.description}</DialogDescription>
            </DialogHeader>
            <div className="grid gap-6">
              {/* Photo Section */}
              <div className="relative h-60 w-full bg-gray-100 rounded-md flex items-center justify-center">
                <div className="text-center text-gray-500">
                  <ImageIcon className="h-16 w-16 mx-auto mb-4" />
                  <p className="text-lg font-medium mb-2">–§–æ—Ç–æ –ø—Ä–∏–∫–ª–∞–¥ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è</p>
                  <p className="text-sm">{selectedItem.name}</p>
                </div>
              </div>

              <div className="grid md:grid-cols-2 gap-6">
                {/* Rules */}
                <div>
                  <h4 className="font-medium mb-3 flex items-center">
                    <CheckCircle className="h-5 w-5 text-green-500 mr-2" />
                    –ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è
                  </h4>
                  <ul className="space-y-2">
                    {selectedItem.rules.map((rule: string, index: number) => (
                      <li key={index} className="flex items-start text-sm">
                        <CheckCircle className="h-4 w-4 text-green-500 mr-2 mt-0.5 flex-shrink-0" />
                        {rule}
                      </li>
                    ))}
                  </ul>
                </div>

                {/* Details */}
                <div>
                  <h4 className="font-medium mb-3 flex items-center">
                    <Info className="h-5 w-5 text-blue-500 mr-2" />
                    –î–µ—Ç–∞–ª—ñ
                  </h4>
                  <div className="space-y-3">
                    {selectedItem.volume && (
                      <div>
                        <span className="text-sm text-gray-600">–û–±'—î–º:</span>
                        <div className="font-medium">{selectedItem.volume}</div>
                      </div>
                    )}
                    {selectedItem.temperature && (
                      <div>
                        <span className="text-sm text-gray-600">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</span>
                        <div className="font-medium">{selectedItem.temperature}</div>
                      </div>
                    )}
                    {selectedItem.special && (
                      <div>
                        <span className="text-sm text-gray-600">–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å:</span>
                        <div className="font-medium">{selectedItem.special}</div>
                      </div>
                    )}
                    {selectedItem.examples && (
                      <div>
                        <span className="text-sm text-gray-600">–ü—Ä–∏–∫–ª–∞–¥–∏:</span>
                        <div className="flex flex-wrap gap-1 mt-1">
                          {selectedItem.examples.map((example: string, index: number) => (
                            <Badge key={index} variant="outline" className="text-xs">
                              {example}
                            </Badge>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              </div>

              <div className="p-4 bg-blue-50 border border-blue-200 rounded-md text-sm text-blue-800">
                <strong>FF:</strong> –§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –ø—Ä–∏–∫–ª–∞–¥—ñ–≤ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è –±—É–¥—É—Ç—å –¥–æ–¥–∞–Ω—ñ –ø—ñ—Å–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ–¥—ñ–∞ —Å–µ—Ä–≤–µ—Ä–∞
              </div>
            </div>
          </DialogContent>
        </Dialog>
      )}

      {/* General Tips */}
      <div className="mt-12">
        <Card className="border-green-200 bg-green-50">
          <CardHeader>
            <CardTitle className="flex items-center text-green-800">
              <Coffee className="h-5 w-5 text-green-600 mr-2" />
              –ó–∞–≥–∞–ª—å–Ω—ñ –ø–æ—Ä–∞–¥–∏ –¥–ª—è –ø–æ–º—ñ—á–Ω–∏–∫—ñ–≤
            </CardTitle>
          </CardHeader>
          <CardContent className="text-sm text-green-700 space-y-3">
            <div>
              <strong>–ß–∏—Å—Ç–æ—Ç–∞:</strong> –ó–∞–≤–∂–¥–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è–π—Ç–µ —á–∏—Å—Ç–æ—Ç—É –ø–æ—Å—É–¥—É, —Å–∫–ª—è–Ω–æ–∫ —Ç–∞ –ø—Ä–∏–±–æ—Ä—ñ–≤ –ø–µ—Ä–µ–¥ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è–º.
            </div>
            <div>
              <strong>–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ—è:</strong> –ê–∫—É—Ä–∞—Ç–Ω–æ —Ä–æ–∑–º—ñ—â—É–π—Ç–µ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å–µ—Ä–≤—ñ—Ä—É–≤–∞–Ω–Ω—è –Ω–∞ –ø—ñ–¥–Ω–æ—Å—ñ.
            </div>
            <div>
              <strong>–®–≤–∏–¥–∫—ñ—Å—Ç—å:</strong> –ü–∏–≤–æ –ø–æ–¥–∞–≤–∞—Ç–∏ –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è, –ø–æ–∫–∏ –Ω–µ —Å—ñ–ª–∞ –ø—ñ–Ω–∫–∞.
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
