"use client"

import { useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Search, Clock, Users, AlertTriangle, ImageIcon, Video, ExternalLink, Wine } from "lucide-react"
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog"

// ===== Types =====
type FoodCategory =
  | "main"
  | "grill"
  | "khachapuri"
  | "khinkali"
  | "garnish"
  | "snacks"
  | "soups"
  | "childmenu"
  | "friture"
  | "salads"
  | "desserts"
  | "drinks"
  | "bar"

interface FoodItem {
  id: number
  name: string
  ingredients?: string
  cookingTime?: string
  weight?: string
  description: string
  allergens?: string[]
  warning?: string
  price: string
  images?: string[]
  videoUrl?: string
  isWeighted?: boolean
}

interface BarItem {
  id: number
  name: string
  category: string
  description: string
  alcohol: string
  volumes: string[]
  price: string
  type: "beer" | "tincture" | "brandy" | "vodka" | "rum" | "gin" | "whisky"
  country?: string
  type_detail?: string
  ingredients?: string
}

// –¢–ï–°–¢–û–í–ò–ô –ü–ê–¢–ï–†–ù
const demoMenuData: { [key in FoodCategory]: (FoodItem | BarItem)[] } = {
  main: [],
  grill: [],
  khachapuri: [],
  khinkali: [],
  garnish: [],
  snacks: [],
  soups: [],
  childmenu: [],
  friture: [],
  salads: [],
  desserts: [],
  drinks: [],
  bar: [],
}
// –ö–ê–¢–ï–ì–û–†–Ü–á –ú–ï–ù–Æ
const categoryTabs: { value: FoodCategory; label: string }[] = [
  { value: "main", label: "üçñ –û—Å–Ω–æ–≤–Ω—ñ" },
  { value: "grill", label: "üî• –ú–∞–Ω–≥–∞–ª" },
  { value: "khachapuri", label: "–•–∞—á–∞–ø—É—Ä—ñ" },
  { value: "khinkali", label: "ü•ü –•—ñ–Ω–∫–∞–ª—ñ" },
  { value: "garnish", label: "–ì–∞—Ä–Ω—ñ—Ä–∏" },
  { value: "snacks", label: "–ó–∞–∫—É—Å–∫–∏" },
  { value: "soups", label: "–°—É–ø–∏" },
  { value: "childmenu", label: "–î–∏—Ç—è—á–µ –º–µ–Ω—é" },
  { value: "friture", label: "–§—Ä–∏—Ç—é—Ä" },
  { value: "salads", label: "ü•ó –°–∞–ª–∞—Ç–∏" },
  { value: "desserts", label: "üç∞ –î–µ—Å–µ—Ä—Ç–∏" },
]

// Add bar subcategories (in Ukrainian)
const barTabs = [
  { value: "nonalco", label: "–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ñ" },
  { value: "coffee", label: "–ö–∞–≤–æ–≤—ñ –Ω–∞–ø–æ—ó" },
  { value: "cocktails", label: "–ö–æ–∫—Ç–µ–π–ª—ñ" },
  { value: "alco", label: "–ê–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó" },
]

// ===== Helpers =====
const getTypeColor = (type?: string) => {
  switch (type) {
    case "beer":
      return "bg-yellow-100 text-yellow-800"
    case "tincture":
      return "bg-purple-100 text-purple-800"
    case "brandy":
      return "bg-amber-100 text-amber-800"
    case "vodka":
      return "bg-blue-100 text-blue-800"
    case "rum":
      return "bg-orange-100 text-orange-800"
    case "gin":
      return "bg-green-100 text-green-800"
    case "whisky":
      return "bg-red-100 text-red-800"
    default:
      return "bg-gray-100 text-gray-800"
  }
}

const getTypeText = (type?: string) => {
  switch (type) {
    case "beer":
      return "–ü–∏–≤–æ"
    case "tincture":
      return "–ù–∞–ª–∏–≤–∫–∞"
    case "brandy":
      return "–ë—Ä–µ–Ω–¥—ñ"
    case "vodka":
      return "–ì–æ—Ä—ñ–ª–∫–∞"
    case "rum":
      return "–†–æ–º"
    case "gin":
      return "–î–∂–∏–Ω"
    case "whisky":
      return "–í—ñ—Å–∫—ñ"
    default:
      return "–ù–∞–ø—ñ–π"
  }
}

// –û–°–ù–û–í–ù–ò–ô –ö–û–ú–ü–û–ù–ï–ù–¢ (–°–ü–ò–°–û–ö –ú–ï–ù–Æ)
export default function MenuPage() {
  const [section, setSection] = useState<"menu" | "bar">("menu")
  const [searchTerm, setSearchTerm] = useState("")
  const [selectedCategory, setSelectedCategory] = useState<FoodCategory>("main")
  const [selectedBarTab, setSelectedBarTab] = useState<string>("alco")
  const [selectedDish, setSelectedDish] = useState<FoodItem | BarItem | null>(null)
  const [selectedAllergen, setSelectedAllergen] = useState<string | null>(null)

  // Collect all allergens from menu items for filter dropdown
  const allAllergens = Array.from(
    new Set(
      Object.values(demoMenuData)
        .flat()
        .flatMap(item => ("allergens" in item && item.allergens ? item.allergens : []))
    )
  ).filter(Boolean)

  // –§–Ü–õ–¨–¢–†–ê–¶–Ü–Ø –ü–û –Ü–ú–ï–ù–Ü + –∞–ª–µ—Ä–≥–µ–Ω
  const getFilteredItems = (category: FoodCategory) => {
    let items: (FoodItem | BarItem)[] = {
      "main": [
        {
          id: 1,
          name: "–ú'—è—Å–Ω–∞ –¥–æ—à–∫–∞",
          ingredients: "ü•© –∫–æ–≤–±–∞—Å–∞ –∫—É–ø–∞—Ç–∏, üçó –∫—É—Ä—á–∞ —Ç–∞–ø–∞–∫–∞, ü•© –∫–æ–≤–±–∞—Å–∞ –∑ –±–∞—Ä–∞–Ω–∏–Ω–∏, ü•© –±–∞–≤–∞—Ä—Å—å–∫–∞ –∫–æ–≤–±–∞—Å–∞, ü•î –∫–∞—Ä—Ç–æ–ø–ª—è —Å–º–∞–∂–µ–Ω–∞, üçû –≥—Ä—ñ–Ω–∫–∏, ü•© —Å—Ç–µ–π–∫ —à–∏—ó —Å–≤–∏–Ω–Ω–∏–π",
          cookingTime: "30-35 —Ö–≤",
          weight: "2000 –≥—Ä",
          description: "–ê—Å–æ—Ä—Ç—ñ –∫–æ–≤–±–∞—Å —ñ–∑ –¥–æ–º–∞—à–Ω—å–æ—ó –º–∞—Å–∞—Ä–Ω—ñ, —Å–≤–∏–Ω–Ω–∏–π —Å—Ç–µ–π–∫ —Ç–∞ –∫—É—Ä—á–∞ —Ç–∞–ø–∞–∫–∞. –ü–æ–¥–∞—î—Ç—å—Å—è –∑—ñ —Å–º–∞–∂–µ–Ω–æ—é –∫–∞—Ä—Ç–æ–ø–ª–µ—é, –≥—Ä—ñ–Ω–∫–∞–º–∏ —Ç–∞ —Ñ—ñ—Ä–º–æ–≤–∏–º–∏ —Å–æ—É—Å–∞–º–∏.",
          allergens: ["—Ü–∏–±—É–ª—è", "–ø–µ—Ä–µ—Ü—å —á–∏–ª—ñ"],
          price: "890 ‚Ç¥",
          images: ["/placeholder.svg?height=400&width=600"],
          videoUrl: "https://www.youtube.com/watch?v=example1",
        },
        {
          id: 2,
          name: "–í–∏–Ω–æ–≥—Ä–∞–¥–Ω—ñ —Ä–∞–≤–ª–∏–∫–∏",
          ingredients: "üêå —Ä–∞–≤–ª–∏–∫–∏ –º–∞—Ä–∏–Ω–æ–≤–∞–Ω—ñ, üßà –º–∞—Å–ª–æ –≤–µ—Ä—à–∫–æ–≤–µ, üßÑ —á–∞—Å–Ω–∏–∫, üßÄ –º–æ—Ü–∞—Ä–µ–ª–ª–∞, ü•õ –≤–µ—Ä—à–∫–∏, üçã –ª–∏–º–æ–Ω",
          cookingTime: "10-15 —Ö–≤",
          weight: "160 –≥—Ä",
          description: "–°–ø—Ä–∞–≤–∂–Ω—ñ–π —Ñ—Ä–∞–Ω—Ü—É–∑—å–∫–∏–π –¥–µ–ª—ñ–∫–∞—Ç–µ—Å –∑ –º'—è—Å–∞ —Ä–∞–≤–ª–∏–∫–∞ –º–∞—Ä–∏–Ω–æ–≤–∞–Ω–æ–≥–æ —É –≤–∏–Ω—ñ —Ç–∞ –∑–∞—Ç–µ—Ä—Ç–∏–π —Å–∏—Ä–æ–º –º–æ—Ü–∞—Ä–µ–ª–ª–∞.",
          allergens: [],
          warning: "–û–±–µ—Ä–µ–∂–Ω–æ, –≥–∞—Ä—è—á–∞ —Å–∫–æ–≤–æ—Ä—ñ–¥–∫–∞!",
          price: "320 ‚Ç¥",
          images: ["/placeholder.svg?height=400&width=600"],
          videoUrl: "https://www.youtube.com/watch?v=example2",
        },
        {
          id: 3,
          name: "–ß–∞—à—É—à—É–ª—ñ –∑ —Ç–µ–ª—è—Ç–∏–Ω–∏",
          ingredients: "ü•© —Ç–µ–ª—è—Ç–∏–Ω–∞, üçÖ –ø–æ–º—ñ–¥–æ—Ä–∏, üå∂Ô∏è –ø–µ—Ä–µ—Ü—å –±–æ–ª–≥–∞—Ä—Å—å–∫–∏–π, üßÖ —Ü–∏–±—É–ª—è, üç∑ –≤–∏–Ω–æ –±—ñ–ª–µ, üåø –∫—ñ–Ω–∑–∞",
          cookingTime: "10-15 —Ö–≤",
          weight: "250 –≥—Ä",
          description: "–°–æ–∫–æ–≤–∏—Ç–µ –º'—è—Å–æ —Ç–µ–ª—è—Ç–∏–Ω–∏ –≤ –Ω–∞—Å–∏—á–µ–Ω–æ–º—É —Ç–æ–º–∞—Ç–Ω–æ–º—É —Å–æ—É—Å—ñ –∑ –ø—Ä—è–Ω–∏–º–∏ —Å–ø–µ—Ü—ñ—è–º–∏, –∫—ñ–Ω–∑–æ—é —Ç–∞ –ª–µ–≥–∫–æ—é –ø—ñ–∫–∞–Ω—Ç–Ω—ñ—Å—Ç—é.",
          allergens: ["–∫—ñ–Ω–∑–∞"],
          warning: "–û–±–µ—Ä–µ–∂–Ω–æ, –≥–∞—Ä—è—á–∞ —Å–∫–æ–≤–æ—Ä—ñ–¥–∫–∞!",
          price: "380 ‚Ç¥",
          images: ["/placeholder.svg?height=400&width=600"],
          videoUrl: "https://www.youtube.com/watch?v=example3",
        },
      ],
      grill: [
        {
          id: 4,
          name: "–ú–∞–Ω–≥–∞–ª–∏—Ü—è —É –≤–æ–≥–Ω—ñ",
          ingredients: "üê∑ —Å–≤–∏–Ω–∏–Ω–∞ –º–∞–Ω–≥–∞–ª–∏—Ü—è, üå∂Ô∏è –∞–¥–∂–∏–∫–∞ –≥—Ä—É–∑–∏–Ω—Å—å–∫–∞, üåø –∫—ñ–Ω–∑–∞, üå∂Ô∏è –ø–µ—Ä–µ—Ü—å —Ä–æ–∂–µ–≤–∏–π",
          cookingTime: "20 —Ö–≤",
          weight: "–≤—ñ–¥ 300 –≥—Ä",
          description: "–°–æ–∫–æ–≤–∏—Ç–µ –º'—è—Å–æ –º–∞–Ω–≥–∞–ª–∏—Ü—ñ –ø—Ä–∏–≥–æ—Ç–æ–≤–∞–Ω–µ –Ω–∞ –≤—ñ–¥–∫—Ä–∏—Ç–æ–º—É –≤–æ–≥–Ω—ñ, —Å–º–∞–∫ —è–∫–æ–≥–æ —á—É–¥–æ–≤–æ –¥–æ–ø–æ–≤–Ω—é—î —Å–≤—ñ–∂–∞ –∑–µ–ª–µ–Ω—å —Ç–∞ –ø—ñ–∫–∞–Ω—Ç–Ω—ñ —Å–æ—É—Å–∏.",
          allergens: ["–∫—ñ–Ω–∑–∞"],
          isWeighted: true,
          price: "–≤—ñ–¥ 450 ‚Ç¥",
          images: ["/placeholder.svg?height=400&width=600"],
          videoUrl: "https://www.youtube.com/watch?v=example4",
        },
        {
          id: 5,
          name: "–°—Ç–µ–π–∫ –†—ñ–±–∞–π",
          ingredients: "ü•© —Ç–µ–ª—è—Ç–∏–Ω–∞ –ë–ª–µ–∫ –ê–Ω–≥—É—Å, üßÇ —Å—ñ–ª—å –º–æ—Ä—Å—å–∫–∞, üå∂Ô∏è –ø–µ—Ä–µ—Ü—å —Å–∏—á—É–∞–Ω—Å—å–∫–∏–π",
          cookingTime: "20-25 —Ö–≤",
          weight: "–≤–∞–≥–æ–≤–∞ —Å—Ç—Ä–∞–≤–∞",
          description: "–ê—Ä–≥–µ–Ω—Ç–∏–Ω—Å—å–∫–∏–π —Å—Ç–µ–π–∫ –≤–∏—Ä—ñ–∑–∞–Ω–∏–π –∑ —Ç–µ–ª—è—Ç–∏–Ω–∏ –ø–æ—Ä–æ–¥–∏ –ë–ª–µ–∫ –ê–Ω–≥—É—Å, 21 –¥–µ–Ω–Ω–æ—ó –≤–æ–ª–æ–≥–æ—ó –≤–∏—Ç—Ä–∏–º–∫–∏.",
          allergens: ["–ø–µ—Ä–µ—Ü—å —á–∏–ª—ñ"],
          isWeighted: true,
          price: "–≤—ñ–¥ 890 ‚Ç¥",
          images: ["/placeholder.svg?height=400&width=600"],
          videoUrl: "https://www.youtube.com/watch?v=example5",
        },
      ],
      khinkali: [
        {
          id: 6,
          name: "–•—ñ–Ω–∫–∞–ª—ñ –∑—ñ —Å–≤–∏–Ω–∏–Ω–æ—é —Ç–∞ —Ç–µ–ª—è—Ç–∏–Ω–æ—é",
          ingredients: "—Å–≤–∏–Ω–∏–Ω–∞, —Ç–µ–ª—è—Ç–∏–Ω–∞, —Ü–∏–±—É–ª—è —Å–∏–Ω—è, üåø –∫—ñ–Ω–∑–∞, üå∂Ô∏è —á–∏–ª—ñ, ü•ü —Ç—ñ—Å—Ç–æ",
          cookingTime: "15 —Ö–≤",
          weight: "70 –≥—Ä (1 —à—Ç)",
          description: "–°–æ–∫–æ–≤–∏—Ç–∞ –Ω–∞—á–∏–Ω–∫–∞ –∑ –º'—è—Å–Ω–æ–≥–æ –¥—É–µ—Ç—É —Ç–µ–ª—è—Ç–∏–Ω–∏ —Ç–∞ —Å–≤–∏–Ω–∏–Ω–∏ –≤ –Ω—ñ–∂–Ω–æ–º—É —Ç—ñ—Å—Ç—ñ.",
          allergens: [],
          warning: "–û–±–µ—Ä–µ–∂–Ω–æ, –≥–∞—Ä—è—á–∏–π –±—É–ª—å–π–æ–Ω!",
          price: "45 ‚Ç¥/—à—Ç",
          images: ["/placeholder.svg?height=400&width=600"],
          videoUrl: "https://www.youtube.com/watch?v=example6",
        },
        {
          id: 7,
          name: "–•—ñ–Ω–∫–∞–ª—ñ –∑ —Å–∏—Ä–æ–º",
          ingredients: "üßÄ –±—Ä–∏–Ω–∑–∞, üßÄ –º–æ—Ü–∞—Ä–µ–ª–ª–∞, üßÄ —Å–∏—Ä –∫–∏—Å–ª–æ–º–æ–ª–æ—á–Ω–∏–π, ü•õ –≤–µ—Ä—à–∫–∏, üåø –º'—è—Ç–∞",
          cookingTime: "20 —Ö–≤",
          weight: "250 –≥—Ä",
          description: "–ù—ñ–∂–Ω—ñ —Å–æ–∫–æ–≤–∏—Ç—ñ –º—ñ—à–µ—á–∫–∏ –∑ —Ç–æ–Ω–∫–æ–≥–æ —Ç—ñ—Å—Ç–∞, –Ω–∞–ø–æ–≤–Ω–µ–Ω—ñ —â–µ–¥—Ä–æ—é –ø–æ—Ä—Ü—ñ—î—é —Å–∏—Ä–Ω–æ—ó –Ω–∞—á–∏–Ω–∫–∏ –≤ —Å–∏—Ä–Ω–æ-–≤–µ—Ä—à–∫–æ–≤–æ–º—É —Å–æ—É—Å—ñ.",
          allergens: ["–º'—è—Ç–∞"],
          price: "280 ‚Ç¥",
          images: ["/placeholder.svg?height=400&width=600"],
          videoUrl: "https://www.youtube.com/watch?v=example7",
        },
      ],
      salads: [
        {
          id: 8,
          name: "–ì—Ä—É–∑–∏–Ω—Å—å–∫–∏–π –∑ –ª—ñ—Å–æ–≤–∏–º —Ñ—É–Ω–¥—É–∫–æ–º",
          ingredients: "üçÖ –ø–æ–º—ñ–¥–æ—Ä —á–µ—Ä—ñ, ü•í –æ–≥—ñ—Ä–æ–∫, üå∂Ô∏è –ø–µ—Ä–µ—Ü—å –±–æ–ª–≥–∞—Ä—Å—å–∫–∏–π, üß± —Ü–∏–±—É–ª—è —Å–∏–Ω—è, üå∞ —Ñ—É–Ω–¥—É–∫, üåø –∫—ñ–Ω–∑–∞",
          cookingTime: "15 —Ö–≤",
          weight: "330 –≥—Ä",
          description: "–í–¥–∞–ª–µ –ø–æ—î–¥–Ω–∞–Ω–Ω—è —Å–≤—ñ–∂–∏—Ö –æ–≤–æ—á—ñ–≤, –∑ –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º –∑–∞–ø–∞—à–Ω–æ—ó –∫—ñ–Ω–∑–∏ —Ç–∞ –≥–æ—Ä—ñ—Ö–æ–≤–æ–≥–æ —Å–æ—É—Å—É.",
          allergens: ["—Ü–∏–±—É–ª—è —Å–∏–Ω—è", "–∫—ñ–Ω–∑–∞", "—Ñ—É–Ω–¥—É–∫"],
          price: "240 ‚Ç¥",
          images: ["/placeholder.svg?height=400&width=600"],
          videoUrl: "https://www.youtube.com/watch?v=example8",
        },
        {
          id: 9,
          name: "–í–∞—Ö-–í–∞—Ö",
          ingredients: "üçÖ –ø–æ–º—ñ–¥–æ—Ä–∏ —Ä—ñ–∑–Ω–∏—Ö –≤–∏–¥—ñ–≤, üßÄ –±—Ä–∏–Ω–∑–∞, ü•í –æ–≥—ñ—Ä–æ–∫, üß± —Ü–∏–±—É–ª—è —Å–∏–Ω—è, ü•¨ —Ä—É–∫–æ–ª–∞",
          cookingTime: "15 —Ö–≤",
          weight: "240 –≥—Ä",
          description: "–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π –≥—Ä—É–∑–∏–Ω—Å—å–∫–∏–π —Å–∞–ª–∞—Ç —ñ–∑ —Å–≤—ñ–∂–∏—Ö —Ç–∞ –≤—è–ª–µ–Ω–∏—Ö —Ç–æ–º–∞—Ç—ñ–≤, —É –ø–æ—î–¥–Ω–∞–Ω–Ω—ñ —ñ–∑ –º—É—Å–æ–º –∑ –æ–≤–µ—á–æ—ó –±—Ä–∏–Ω–∑–∏. –ü–æ—î–¥–Ω—É—î —É —Å–æ–±—ñ 4 —Å–æ—É—Å–∞.",
          allergens: ["—Ü–∏–±—É–ª—è", "–ø—ñ–∫–∞–Ω—Ç–Ω–∏–π —Å–æ—É—Å"],
          price: "320 ‚Ç¥",
          images: ["/placeholder.svg?height=400&width=600"],
          videoUrl: "https://www.youtube.com/watch?v=example9",
        },
      ],
      desserts: [
        {
          id: 10,
          name: "–¢—ñ—Ä–∞–º—ñ—Å—É",
          ingredients: "üßÄ –º–∞—Å–∫–∞—Ä–ø–æ–Ω–µ, ü•õ –≤–µ—Ä—à–∫–∏, ü•ö —è–π—Ü–µ, ‚òï –µ—Å–ø—Ä–µ—Å–æ, üç´ –∫–∞–∫–∞–æ",
          cookingTime: "10 —Ö–≤",
          weight: "160 –≥—Ä",
          description: "–ù—ñ–∂–Ω–µ —Ç—ñ—Ä–∞–º—ñ—Å—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Å–∏—Ä—É –º–∞—Å–∫–∞—Ä–ø–æ–Ω–µ –∑ —Ö—Ä—É–º–∫–∏–º–∏ —Ç—Ä—É–±–æ—á–∫–∞–º–∏, —Å–º–∞–∫ —è–∫–æ–≥–æ —á—É–¥–æ–≤–æ –¥–æ–ø–æ–≤–Ω—é—î –∑–∞–ø–∞—à–Ω–µ –µ—Å–ø—Ä–µ—Å–æ.",
          allergens: ["—è–π—Ü–µ"],
          price: "180 ‚Ç¥",
          images: ["/placeholder.svg?height=400&width=600"],
          videoUrl: "https://www.youtube.com/watch?v=example10",
        },
        {
          id: 11,
          name: "–ë–∞–≥—Ä–∞—Ç–æ–Ω—ñ",
          ingredients: "ü•ê –ª–∏—Å—Ç–∫–æ–≤–µ —Ç—ñ—Å—Ç–æ, ü•õ –º–æ–ª–æ–∫–æ, ü•ö —è–π—Ü–µ, üßà –º–∞—Å–ª–æ –≤–µ—Ä—à–∫–æ–≤–µ, üçØ —Ü—É–∫–æ—Ä",
          cookingTime: "15 —Ö–≤",
          weight: "210 –≥—Ä",
          description: "–°–ø—Ä–∞–≤–∂–Ω—ñ–π –≥—Ä—É–∑–∏–Ω—Å—å–∫–∏–π –Ω–∞–ø–æ–ª–µ–æ–Ω –∑ —Ö—Ä—É–º–∫–∏–º –ª–∏—Å—Ç–∫–æ–≤–∏–º —Ç—ñ—Å—Ç–æ–º —ñ –Ω—ñ–∂–Ω–∏–º –∑–∞–≤–∞—Ä–Ω–∏–º –∫—Ä–µ–º–æ–º. –ù–∞–∑–≤–∞–Ω–æ –≤ —á–µ—Å—Ç—å –≥—Ä—É–∑–∏–Ω—Å—å–∫–æ–≥–æ —Ü–∞—Ä—Å—å–∫–æ–≥–æ —Ä–æ–¥—É –ë–∞–≥—Ä–∞—Ç—ñ–æ–Ω—ñ.",
          allergens: ["—è–π—Ü–µ"],
          price: "160 ‚Ç¥",
          images: ["/placeholder.svg?height=400&width=600"],
          videoUrl: "https://www.youtube.com/watch?v=example11",
        },
      ],
      bar: [
        // Beer Section
        {
          id: 12,
          name: "–°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ",
          category: "–ü–∏–≤–æ –≤–ª–∞—Å–Ω–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞",
          description: "–°–≤—ñ—Ç–ª–µ –Ω–∞—Å–∏—á–µ–Ω–µ –ø–∏–≤–æ –≤–ª–∞—Å–Ω–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞, –Ω–µ —Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–µ, –Ω–µ –ø–∞—Å—Ç–µ—Ä–∏–∑–æ–≤–∞–Ω–µ",
          alcohol: "3.6%",
          volumes: ["0.3–ª", "0.5–ª", "1–ª", "3–ª (–ü–∏–≤–Ω–∞ –≤–µ–∂–∞)"],
          price: "–≤—ñ–¥ 80 ‚Ç¥",
          type: "beer" as const,
        },
        {
          id: 13,
          name: "–ù–∞—à–µ –ü—à–µ–Ω–∏—á–Ω–µ",
          category: "–ü–∏–≤–æ –≤–ª–∞—Å–Ω–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞",
          description: "–ü—à–µ–Ω–∏—á–Ω–µ –ø–∏–≤–æ –∑ –Ω–æ—Ç–∫–æ—é –∫–∏—Å–ª–∏–Ω–∫–∏, –Ω–µ —Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–µ, –Ω–µ –ø–∞—Å—Ç–µ—Ä–∏–∑–æ–≤–∞–Ω–µ",
          alcohol: "4.6%",
          volumes: ["0.3–ª", "0.5–ª", "1–ª", "3–ª (–ü–∏–≤–Ω–∞ –≤–µ–∂–∞)"],
          price: "–≤—ñ–¥ 85 ‚Ç¥",
          type: "beer" as const,
        },
        {
          id: 14,
          name: "–ù–∞—à–µ —Ç–µ–º–Ω–µ",
          category: "–ü–∏–≤–æ –≤–ª–∞—Å–Ω–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞",
          description: "–¢–µ–º–Ω–µ –ø–∏–≤–æ –∑ –Ω–æ—Ç–∫–∞–º–∏ –∫–∞—Ä–∞–º–µ–ª—ñ —Ç–∞ –≥—ñ—Ä—á–∏–Ω–∫–æ—é, –Ω–µ —Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–µ, –Ω–µ –ø–∞—Å—Ç–µ—Ä–∏–∑–æ–≤–∞–Ω–µ",
          alcohol: "6%",
          volumes: ["0.3–ª", "0.5–ª", "1–ª", "3–ª (–ü–∏–≤–Ω–∞ –≤–µ–∂–∞)"],
          price: "–≤—ñ–¥ 90 ‚Ç¥",
          type: "beer" as const,
        },
        {
          id: 15,
          name: "IPA",
          category: "–ü–∏–≤–æ –≤–ª–∞—Å–Ω–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞",
          description: "–ö–≤—ñ—Ç–∫–æ–≤–∏–π –∞—Ä–æ–º–∞—Ç —ñ –≥—ñ—Ä–∫–∏–π –ø–æ—Å–º–∞–∫, –Ω–µ —Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–µ, –Ω–µ –ø–∞—Å—Ç–µ—Ä–∏–∑–æ–≤–∞–Ω–µ",
          alcohol: "8.2%",
          volumes: ["0.3–ª", "0.5–ª", "1–ª", "3–ª (–ü–∏–≤–Ω–∞ –≤–µ–∂–∞)"],
          price: "–≤—ñ–¥ 95 ‚Ç¥",
          type: "beer" as const,
        },
        {
          id: 16,
          name: "–î–µ–≥—É—Å—Ç–∞—Ü—ñ–π–Ω–∏–π –Ω–∞–±—ñ—Ä –ø–∏–≤–∞",
          category: "–ü–∏–≤–æ –≤–ª–∞—Å–Ω–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞",
          description: "–°–µ—Ç —Å–≤—ñ—Ç–ª–æ–≥–æ, —Ç–µ–º–Ω–æ–≥–æ, –ø—à–µ–Ω–∏—á–Ω–æ–≥–æ —Ç–∞ IPA –ø–æ 100 –º–ª –∫–æ–∂–Ω–æ–≥–æ",
          alcohol: "3.6-8.2%",
          volumes: ["4x100–º–ª"],
          price: "180 ‚Ç¥",
          type: "beer" as const,
        },
        {
          id: 17,
          name: "–°—Ç–µ–ª–∞ –±/–∞",
          category: "–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω–µ –ø–∏–≤–æ",
          description: "–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω–µ –ø–∏–≤–æ",
          alcohol: "0%",
          volumes: ["0.35–ª"],
          price: "65 ‚Ç¥",
          type: "beer" as const,
        },
        // –ù–∞–ª–∏–≤–∫–∏
        {
          id: 18,
          name: "–í–æ—Å–∫–æ–≤—É—Ö–∞ (–û–±–ª—ñ–ø–∏—Ö–æ–≤–∞)",
          category: "–ù–∞–ª–∏–≤–∫–∏",
          description: "–ó –≤–∏—Ä–∞–∑–Ω–∏–º —Å–º–∞–∫–æ–º –æ–±–ª—ñ–ø–∏—Ö–∏, –∫–∏—Å–ª–æ-—Å–æ–ª–æ–¥–∫–∞. –û–±–ª—ñ–ø–∏—Ö–∞, —Ü—É–∫—Ä–æ–≤–∏–π —Å–∏—Ä–æ–ø, –ª–∏–º–æ–Ω–Ω–∞ –∫–∏—Å–ª–æ—Ç–∞",
          alcohol: "18-22¬∞",
          ingredients: "–û–±–ª—ñ–ø–∏—Ö–∞, —Ü—É–∫—Ä–æ–≤–∏–π —Å–∏—Ä–æ–ø, –ª–∏–º–æ–Ω–Ω–∞ –∫–∏—Å–ª–æ—Ç–∞",
          volumes: ["–≤—ñ–¥ 50–º–ª –¥–æ –±–µ–∑–∫—ñ–Ω—á–µ–Ω–Ω–æ—Å—Ç—ñ"],
          price: "–≤—ñ–¥ 45 ‚Ç¥",
          type: "tincture" as const,
        },
        {
          id: 19,
          name: "–ö–∞–ª–≥–∞–Ω—ñ–≤–∫–∞",
          category: "–ù–∞–ª–∏–≤–∫–∏",
          description: "–ó –≤–∏—Ä–∞–∑–Ω–∏–º —Å–º–∞–∫–æ–º –∫–∞–ª–≥–∞–Ω, –ø—Ä–∏–≤–∫—É—Å —Ü–∏—Ç—Ä—É—Å–æ–≤–∏—Ö",
          alcohol: "32-34¬∞",
          ingredients: "–ö–æ—Ä—ñ–Ω—å –∫–∞–ª–≥–∞–Ω—É, –∫–æ—Ä—ñ–Ω—å —Å–æ–ª–æ–¥–∫–∏, –ø–∞–ª–∏—á–∫–∞ –∫–æ—Ä–∏—Ü—ñ, —Ü–µ–¥—Ä–∞ –ª–∏–º–æ–Ω–∞, –º–µ–¥",
          volumes: ["–≤—ñ–¥ 50–º–ª –¥–æ –±–µ–∑–∫—ñ–Ω—á–µ–Ω–Ω–æ—Å—Ç—ñ"],
          price: "–≤—ñ–¥ 55 ‚Ç¥",
          type: "tincture" as const,
        },
        {
          id: 20,
          name: "–ú–∞–ª–∏–Ω—ñ–≤–∫–∞",
          category: "–ù–∞–ª–∏–≤–∫–∏",
          description: "–ó –≤–∏—Ä–∞–∑–Ω–∏–º —Å–º–∞–∫–æ–º –º–∞–ª–∏–Ω–∏, —Å–æ–ª–æ–¥–∫–∞",
          alcohol: "14¬∞",
          ingredients: "–ú–∞–ª–∏–Ω–∞, —Ü—É–∫–æ—Ä",
          volumes: ["–≤—ñ–¥ 50–º–ª –¥–æ –±–µ–∑–∫—ñ–Ω—á–µ–Ω–Ω–æ—Å—Ç—ñ"],
          price: "–≤—ñ–¥ 40 ‚Ç¥",
          type: "tincture" as const,
        },
        {
          id: 21,
          name: "–ï–ª—ñ–∫—Å–∏—Ä –ó–¥–æ—Ä–æ–≤'—è (–ë–µ—Ö–µ—Ä—ñ–≤–∫–∞, –®—Ç–µ–∫–µ–ª—ñ–≤–∫–∞)",
          category: "–ù–∞–ª–∏–≤–∫–∏",
          description: "–ó –≤–∏—Ä–∞–∑–Ω–∏–º —Å–º–∞–∫–æ–º –ø—Ä—è–Ω–æ—â—ñ–≤, –ø—Ä–∏–≤–∫—É—Å —Å–æ–ª–æ–¥–∫–æ–≥–æ –∞–ø–µ–ª—å—Å–∏–Ω–∞",
          alcohol: "34-36¬∞",
          ingredients: "–°–ø–µ—Ü—ñ—ó (–∫–æ—Ä–∏—Ü—è, –≥–≤–æ–∑–¥–∏–∫–∞, –∫–∞—Ä–¥–∞–º–æ–Ω, –∞–Ω—ñ—Å, –±–∞–¥—å—è–Ω, –ø–µ—Ä–µ—Ü—å –¥—É—Ö–º—è–Ω–∏–π), —Ü—É–∫–æ—Ä, —Ü–µ–¥—Ä–∞ –∞–ø–µ–ª—å—Å–∏–Ω—É",
          volumes: ["–≤—ñ–¥ 50–º–ª –¥–æ –±–µ–∑–∫—ñ–Ω—á–µ–Ω–Ω–æ—Å—Ç—ñ"],
          price: "–≤—ñ–¥ 60 ‚Ç¥",
          type: "tincture" as const,
        },
        {
          id: 22,
          name: "–•—Ä—ñ–Ω–æ–≤—É—Ö–∞",
          category: "–ù–∞–ª–∏–≤–∫–∏",
          description: "–ó –≤–∏—Ä–∞–∑–Ω–∏–º —Å–º–∞–∫–æ–º —Ö—Ä–æ–Ω—É, –ø–µ–∫—É—á–∞",
          alcohol: "36-38¬∞",
          ingredients: "–ö–æ—Ä—ñ–Ω—å —Ö—Ä–æ–Ω—É, –ø–µ—Ä–µ—Ü—å —á—ñ–ª—ñ, –º–µ–¥",
          volumes: ["–≤—ñ–¥ 50–º–ª –¥–æ –±–µ–∑–∫—ñ–Ω—á–µ–Ω–Ω–æ—Å—Ç—ñ"],
          price: "–≤—ñ–¥ 50 ‚Ç¥",
          type: "tincture" as const,
        },
        {
          id: 23,
          name: "–õ—ñ—Å–æ–≤–∞ –Ø–≥–æ–¥–∞",
          category: "–ù–∞–ª–∏–≤–∫–∏",
          description: "–ó –≤–∏—Ä–∞–∑–Ω–∏–º —Å–º–∞–∫–æ–º —Å–º–æ—Ä–æ–¥–∏–Ω–∏, —Å–æ–ª–æ–¥–∫–∞",
          alcohol: "18¬∞",
          ingredients: "–°–º–æ—Ä–æ–¥–∏–Ω–∞, —Ü—É–∫–æ—Ä",
          volumes: ["–≤—ñ–¥ 50–º–ª –¥–æ –±–µ–∑–∫—ñ–Ω—á–µ–Ω–Ω–æ—Å—Ç—ñ"],
          price: "–≤—ñ–¥ 45 ‚Ç¥",
          type: "tincture" as const,
        },
        // –ß–∞—á–∞ —Ç–∞ —Å–∞–º–æ–≥–æ–Ω
        {
          id: 24,
          name: "–ß–∞—á–∞",
          category: "–§—Ä—É–∫—Ç–æ–≤—ñ/–∑–µ—Ä–Ω–æ–≤—ñ –±—Ä–µ–Ω–¥—ñ",
          description: "–ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π –≥—Ä—É–∑–∏–Ω—Å—å–∫–∏–π –Ω–∞–ø—ñ–π –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∏–Ω–æ–≥—Ä–∞–¥–Ω–∏—Ö –∫—ñ—Å—Ç–æ—á–æ–∫. –ù–µ –≥–æ—Ä—ñ–ª–∫–∞ —á–∏ —Å–∞–º–æ–≥–æ–Ω, –∞ —Ä—ñ–∑–Ω–æ–≤–∏–¥ –±—Ä–µ–Ω–¥—ñ –∑ —Ñ—Ä—É–∫—Ç–æ–≤–æ-—è–≥—ñ–¥–Ω–æ—é –æ—Å–Ω–æ–≤–æ—é",
          alcohol: "40¬∞",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 80 ‚Ç¥",
          type: "brandy" as const,
        },
        {
          id: 25,
          name: "–°–∞–º–æ–≥–æ–Ω –¥—É–±–æ–≤–∏–π (—á–µ—Ä–≤–æ–Ω–∏–π)",
          category: "–§—Ä—É–∫—Ç–æ–≤—ñ/–∑–µ—Ä–Ω–æ–≤—ñ –±—Ä–µ–Ω–¥—ñ",
          description: "–ê—Ä–æ–º–∞—Ç –º–µ–¥—É",
          alcohol: "42¬∞",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 70 ‚Ç¥",
          type: "brandy" as const,
        },
        {
          id: 26,
          name: "–°–∞–º–æ–≥–æ–Ω —Ö–º—ñ–ª—å–Ω–∏–π",
          category: "–§—Ä—É–∫—Ç–æ–≤—ñ/–∑–µ—Ä–Ω–æ–≤—ñ –±—Ä–µ–Ω–¥—ñ",
          description: "–ê—Ä–æ–º–∞—Ç –∑–µ–ª–µ–Ω–æ–≥–æ —è–±–ª—É–∫–∞",
          alcohol: "42¬∞",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 70 ‚Ç¥",
          type: "brandy" as const,
        },
        // –ë—Ä–µ–Ω–¥—ñ —Ç–∞ –∫–æ–Ω—å—è–∫
        {
          id: 27,
          name: "–ë—Ä–µ–Ω–¥—ñ –ê—Ä–∞—Ä–∞—Ç",
          category: "–ë—Ä–µ–Ω–¥—ñ",
          description: "–í—ñ—Ä–º–µ–Ω—Å—å–∫–∏–π –±—Ä–µ–Ω–¥—ñ 5 –∑—ñ—Ä–æ–∫",
          alcohol: "40¬∞",
          country: "–í—ñ—Ä–º–µ–Ω—ñ—è",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 120 ‚Ç¥",
          type: "brandy" as const,
        },
        {
          id: 28,
          name: "–ë—Ä–µ–Ω–¥—ñ –î–æ–≤–±—É—à",
          category: "–ë—Ä–µ–Ω–¥—ñ",
          description: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –±—Ä–µ–Ω–¥—ñ 5 –∑—ñ—Ä–æ–∫",
          alcohol: "40¬∞",
          country: "–£–∫—Ä–∞—ó–Ω–∞",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 100 ‚Ç¥",
          type: "brandy" as const,
        },
        {
          id: 29,
          name: "–ë—Ä–µ–Ω–¥—ñ –°–∞—Ä–∞–¥–∂–∞—à–≤—ñ–ª—ñ",
          category: "–ë—Ä–µ–Ω–¥—ñ",
          description: "–ì—Ä—É–∑–∏–Ω—Å—å–∫–∏–π –±—Ä–µ–Ω–¥—ñ 5 –∑—ñ—Ä–æ–∫",
          alcohol: "40¬∞",
          country: "–ì—Ä—É–∑—ñ—è",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 110 ‚Ç¥",
          type: "brandy" as const,
        },
        // –ì–æ—Ä—ñ–ª–∫–∞
        {
          id: 30,
          name: "Nemiroff —à—Ç–æ—Ñ",
          category: "–ì–æ—Ä—ñ–ª–∫–∞",
          description: "–ö–ª–∞—Å–∏—á–Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –≥–æ—Ä—ñ–ª–∫–∞",
          alcohol: "40¬∞",
          country: "–£–∫—Ä–∞—ó–Ω–∞",
          volumes: ["50–º–ª", "100–º–ª", "–ø–ª—è—à–∫–∞"],
          price: "–≤—ñ–¥ 60 ‚Ç¥",
          type: "vodka" as const,
        },
        {
          id: 31,
          name: "Nemiroff Deluxe",
          category: "–ì–æ—Ä—ñ–ª–∫–∞",
          description: "–ü—Ä–µ–º—ñ—É–º –≥–æ—Ä—ñ–ª–∫–∞ (–∫–ª–∞—Å–∏—á–Ω–∞, –º–µ–¥–æ–≤–∞ –∑ –ø–µ—Ä—Ü–µ–º, –¥–∏–∫–∞ –∂—É—Ä–∞–≤–ª–∏–Ω–∞)",
          alcohol: "40¬∞",
          country: "–£–∫—Ä–∞—ó–Ω–∞",
          volumes: ["50–º–ª", "100–º–ª", "–ø–ª—è—à–∫–∞"],
          price: "–≤—ñ–¥ 70 ‚Ç¥",
          type: "vodka" as const,
        },
        {
          id: 32,
          name: "Vodka Absolut",
          category: "–ì–æ—Ä—ñ–ª–∫–∞",
          description: "–®–≤–µ–¥—Å—å–∫–∞ –ø—Ä–µ–º—ñ—É–º –≥–æ—Ä—ñ–ª–∫–∞",
          alcohol: "40¬∞",
          country: "–®–≤–µ—Ü—ñ—è",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 90 ‚Ç¥",
          type: "vodka" as const,
        },
        {
          id: 33,
          name: "–°—Ç–∞—Ä–∏—Ü—å–∫–∏–π-–õ–µ–≤–∏—Ü—å–∫–∏–π",
          category: "–ì–æ—Ä—ñ–ª–∫–∞",
          description: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –ø—Ä–µ–º—ñ—É–º –≥–æ—Ä—ñ–ª–∫–∞",
          alcohol: "40¬∞",
          country: "–£–∫—Ä–∞—ó–Ω–∞",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 80 ‚Ç¥",
          type: "vodka" as const,
        },
        // –†–æ–º
        {
          id: 34,
          name: "Havana Club Anejo 3 Anos",
          category: "–†–æ–º",
          description: "–î—É–∂–µ –ø—Ä–∏—î–º–Ω–∏–π —Å–º–∞–∫ –∑ –Ω–æ—Ç–∫–∞–º–∏ –¥–∏–º—É, –≤–∞–Ω—ñ–ª—ñ —Ç–∞ —à–æ–∫–æ–ª–∞–¥—É",
          alcohol: "40¬∞",
          country: "–ö—É–±–∞",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 120 ‚Ç¥",
          type: "rum" as const,
        },
        {
          id: 35,
          name: "Havana Club Anejo Especial",
          category: "–†–æ–º",
          description: "–ë–∞–≥–∞—Ç–∏–π, –∑–±–∞–ª–∞–Ω—Å–æ–≤–∞–Ω–∏–π —Å–º–∞–∫ –∑ –Ω–æ—Ç–∞–º–∏ –∫–∞—Ä–∞–º–µ–ª—ñ, –≤–∞–Ω—ñ–ª—ñ, —Ç—é—Ç—é–Ω—É, –∫–æ—Ä–∏—Ü—ñ –π –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤–æ—ó —à–∫—ñ—Ä–∫–∏",
          alcohol: "40¬∞",
          country: "–ö—É–±–∞",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 130 ‚Ç¥",
          type: "rum" as const,
        },
        {
          id: 36,
          name: "Kraken",
          category: "–†–æ–º",
          description: "–¢–µ–º–Ω–∏–π –±—É—Ä—à—Ç–∏–Ω–æ–≤–∏–π —Ä–æ–º –∑ –ø—Ä—è–Ω–∏–º–∏ –≤—ñ–¥—Ç—ñ–Ω–∫–∞–º–∏ –≤–∞–Ω—ñ–ª—ñ, –≥–≤–æ–∑–¥–∏–∫–∏, –∞—Ä–æ–º–∞—Ç–æ–º –∫–æ—Ä–∏—Ü—ñ",
          alcohol: "40¬∞",
          country: "–Ü—Ä–ª–∞–Ω–¥—ñ—è",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 140 ‚Ç¥",
          type: "rum" as const,
        },
        // –î–∂–∏–Ω
        {
          id: 37,
          name: "Beefeater London gin",
          category: "–î–∂–∏–Ω",
          description: "–ü—Ä–∏—î–º–Ω–∏–π —Ç–µ—Ä–ø–∫–∏–π —Å–º–∞–∫ –∑ –Ω–æ—Ç–∞–º–∏ —è–ª—ñ–≤—Ü—é —ñ —Ü–∏—Ç—Ä—É—Å–æ–≤–∏—Ö. –°—É—Ö–∏–π –ø–æ—Å–º–∞–∫ –∑ –∞—Ä–æ–º–∞—Ç–æ–º —Ü–∏—Ç—Ä—É—Å–æ–≤–∏—Ö",
          alcohol: "40¬∞",
          country: "–í–µ–ª–∏–∫–∞ –ë—Ä–∏—Ç–∞–Ω—ñ—è",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 110 ‚Ç¥",
          type: "gin" as const,
        },
        {
          id: 38,
          name: "Beefeater London pink strawberry",
          category: "–î–∂–∏–Ω",
          description: "–†–æ–∂–µ–≤–∏–π –¥–∂–∏–Ω. –ú'—è–∫–∏–π —Å–º–∞–∫ –∑ —Ü–∏—Ç—Ä—É—Å–æ–≤–æ-—è–ª—ñ–≤—Ü–µ–≤–æ—é —Ç–µ—Ä–ø–∫—ñ—Å—Ç—é",
          alcohol: "37.5¬∞",
          country: "–í–µ–ª–∏–∫–∞ –ë—Ä–∏—Ç–∞–Ω—ñ—è",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 120 ‚Ç¥",
          type: "gin" as const,
        },
        // –í—ñ—Å–∫—ñ
        {
          id: 39,
          name: "The Glenlivet 12 —Ä–æ–∫—ñ–≤",
          category: "–í—ñ—Å–∫—ñ",
          description: "–û–¥–Ω–æ—Å–æ–ª–æ–¥–æ–≤–µ —à–æ—Ç–ª–∞–Ω–¥—Å—å–∫–µ –≤—ñ—Å–∫—ñ. –®–æ–≤–∫–æ–≤–∏—Å—Ç–∏–π —Å–º–∞–∫ –∑ –Ω–æ—Ç–∫–∞–º–∏ —Ñ—Ä—É–∫—Ç—ñ–≤, –≤–∞–Ω—ñ–ª—ñ, –∫–≤—ñ—Ç—ñ–≤ —ñ –º–∏–≥–¥–∞–ª–µ–≤–æ–≥–æ –±—ñ—Å–∫–≤—ñ—Ç–∞",
          alcohol: "40%",
          country: "–®–æ—Ç–ª–∞–Ω–¥—ñ—è",
          type_detail: "–û–¥–Ω–æ—Å–æ–ª–æ–¥–æ–≤–∏–π —Å–∫–æ—á",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 180 ‚Ç¥",
          type: "whisky" as const,
        },
        {
          id: 40,
          name: "Jameson",
          category: "–í—ñ—Å–∫—ñ",
          description: "–ö—É–ø–∞–∂–æ–≤–∞–Ω–µ —ñ—Ä–ª–∞–Ω–¥—Å—å–∫–µ –≤—ñ—Å–∫—ñ. –ó–ª–∏—Ç—Ç—è –≤–∞–Ω—ñ–ª—å–Ω–æ–≥–æ, –¥–µ—Ä–µ–≤–Ω–æ–≥–æ —Ç–∞ –º–µ–¥–æ–≤–æ–≥–æ —Å–º–∞–∫—É –∑ –≤—ñ–¥—Ç—ñ–Ω–∫–∞–º–∏ –ø—Ä—è–Ω–æ—â—ñ–≤ —ñ –ª—ñ—Å–æ–≤–∏—Ö –≥–æ—Ä—ñ—Ö—ñ–≤",
          alcohol: "40%",
          country: "–Ü—Ä–ª–∞–Ω–¥—ñ—è",
          type_detail: "–ö—É–ø–∞–∂–æ–≤–∞–Ω–µ –≤—ñ—Å–∫—ñ",
          volumes: ["50–º–ª", "100–º–ª"],
          price: "–≤—ñ–¥ 150 ‚Ç¥",
          type: "whisky" as const,
        },
      ],
      khachapuri: [],
      garnish: [],
      snacks: [],
      soups: [],
      childmenu: [],
      friture: [],
      drinks: []
    }[category] || []
    // Filter by allergen if selected
    if (selectedAllergen) {
      items = items.filter(
        item =>
          !("allergens" in item) ||
          !item.allergens ||
          !item.allergens.includes(selectedAllergen)
      )
    }
    return items.filter((item) =>
      (item.name?.toLowerCase() ?? "").includes(searchTerm.toLowerCase()) ||
      (item.description?.toLowerCase() ?? "").includes(searchTerm.toLowerCase())
    )
  }

  // Filter bar items by subcategory
  const getFilteredBarItems = (barTab: string) => {
    let items = getFilteredItems("bar")
    // Example: you can adjust the logic below to match your real data structure
    if (barTab === "nonalco") {
      items = items.filter(item =>
        ("category" in item && item.category?.toLowerCase().includes("–±–µ–∑–∞–ª–∫–æ–≥–æ–ª—å")) ||
        ("type" in item && item.type === "beer" && item.name?.toLowerCase().includes("–±/–∞"))
      )
    } else if (barTab === "coffee") {
      items = items.filter(item =>
        ("category" in item && item.category?.toLowerCase().includes("–∫–∞–≤–∞")) ||
        item.name?.toLowerCase().includes("–∫–∞–≤–∞") ||
        item.name?.toLowerCase().includes("–µ—Å–ø—Ä–µ—Å–æ")
      )
    } else if (barTab === "cocktails") {
      items = items.filter(item =>
        ("category" in item && item.category?.toLowerCase().includes("–∫–æ–∫—Ç–µ–π–ª—å")) ||
        item.name?.toLowerCase().includes("–∫–æ–∫—Ç–µ–π–ª—å")
      )
    } else if (barTab === "alco") {
      items = items.filter(item =>
        "type" in item &&
        ["beer", "tincture", "brandy", "vodka", "rum", "gin", "whisky"].includes(item.type)
        && !item.name?.toLowerCase().includes("–±/–∞")
      )
    }
    return items
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">–ú–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É</h1>
        <p className="text-gray-600">–ü–æ–≤–Ω–∏–π –∫–∞—Ç–∞–ª–æ–≥ —Å—Ç—Ä–∞–≤ —Ç–∞ –Ω–∞–ø–æ—ó–≤ –∑ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∞–º–∏ —Ç–∞ –∞–ª–µ—Ä–≥–µ–Ω–∞–º–∏</p>
      </div>

      {/* Section Switcher */}
      <div className="flex gap-4 mb-8">
        <Button
          variant={section === "menu" ? "default" : "outline"}
          className={section === "menu" ? "bg-orange-500 text-white" : ""}
          onClick={() => setSection("menu")}
        >
          –ú–µ–Ω—é
        </Button>
        <Button
          variant={section === "bar" ? "default" : "outline"}
          className={section === "bar" ? "bg-orange-500 text-white" : ""}
          onClick={() => setSection("bar")}
        >
          –ë–∞—Ä
        </Button>
      </div>

      {/* Search and Allergen Filter */}
      <div className="mb-8 flex flex-col md:flex-row gap-4 items-center">
        <div className="relative max-w-md w-full">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4" />
          <Input
            placeholder="–ü–æ—à—É–∫ —Å—Ç—Ä–∞–≤ —Ç–∞ –Ω–∞–ø–æ—ó–≤..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="pl-10"
          />
        </div>
        <div className="flex items-center gap-2 w-full md:w-auto">
          <span className="text-sm text-gray-600">–ë–µ–∑ –∞–ª–µ—Ä–≥–µ–Ω—É:</span>
          <select
            className="border rounded px-2 py-1 text-sm"
            value={selectedAllergen || ""}
            onChange={e => setSelectedAllergen(e.target.value || null)}
          >
            <option value="">–í—Å—ñ —Å—Ç—Ä–∞–≤–∏</option>
            {allAllergens.map((allergen, idx) => (
              <option key={idx} value={allergen}>{allergen}</option>
            ))}
          </select>
        </div>
      </div>

      {/* Tabs for Menu or Bar */}
      {section === "menu" ? (
        <Tabs value={selectedCategory} onValueChange={v => setSelectedCategory(v as FoodCategory)} className="w-full">
          <TabsList className="grid w-full grid-cols-6 mb-8">
            {/* Food category tabs */}
            {categoryTabs.map(tab => (
              <TabsTrigger key={tab.value} value={tab.value}>{tab.label}</TabsTrigger>
            ))}
          </TabsList>

          {/* Render Food Categories */}
          {categoryTabs
            .filter(tab => tab.value !== "bar")
            .map(tab => (
              <TabsContent key={tab.value} value={tab.value}>
                <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {getFilteredItems(tab.value).map(item => (
                    <Card key={item.id} className="hover:shadow-lg transition-shadow border-orange-100">
                      <CardHeader>
                        <div className="flex items-start justify-between">
                          <CardTitle className="text-lg">{item.name}</CardTitle>
                          <div className="text-lg font-bold text-orange-600">{item.price}</div>
                        </div>
                        {("ingredients" in item) && item.ingredients && (
                          <CardDescription className="text-sm">{item.ingredients}</CardDescription>
                        )}
                      </CardHeader>
                      <CardContent>
                        <p className="text-sm text-gray-700 mb-4">{item.description}</p>
                        <div className="space-y-2 mb-4">
                          {("cookingTime" in item) && item.cookingTime && (
                            <div className="flex items-center text-sm text-gray-600">
                              <Clock className="h-4 w-4 mr-2" />
                              {item.cookingTime}
                            </div>
                          )}
                          {("weight" in item) && item.weight && (
                            <div className="flex items-center text-sm text-gray-600">
                              <Users className="h-4 w-4 mr-2" />
                              {item.weight}
                            </div>
                          )}
                        </div>
                        {("allergens" in item) && item.allergens && item.allergens.length > 0 && (
                          <div className="mb-4">
                            <div className="text-xs text-gray-600 mb-1">–ê–ª–µ—Ä–≥–µ–Ω–∏:</div>
                            <div className="flex flex-wrap gap-1">
                              {item.allergens.map((allergen, idx) => (
                                <Badge key={idx} className="bg-red-100 text-red-800 text-xs">{allergen}</Badge>
                              ))}
                            </div>
                          </div>
                        )}
                        {("warning" in item) && item.warning && (
                          <div className="flex items-center text-xs text-orange-600 mb-4">
                            <AlertTriangle className="h-3 w-3 mr-1" />
                            {item.warning}
                          </div>
                        )}
                        {("isWeighted" in item) && item.isWeighted && (
                          <Badge className="bg-blue-100 text-blue-800 mb-4">–í–∞–≥–æ–≤–∞ —Å—Ç—Ä–∞–≤–∞</Badge>
                        )}
                        <div className="flex space-x-2">
                          {("images" in item) && item.images && (
                            <Dialog>
                              <DialogTrigger asChild>
                                <Button variant="outline" className="flex-1 border-orange-200 text-orange-600 hover:bg-orange-50">
                                  <ImageIcon className="h-4 w-4 mr-2" />
                                  –§–æ—Ç–æ
                                </Button>
                              </DialogTrigger>
                              <DialogContent className="sm:max-w-md">
                                <DialogHeader>
                                  <DialogTitle>{item.name} - –§–æ—Ç–æ</DialogTitle>
                                  <DialogDescription>–§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó —Å—Ç—Ä–∞–≤–∏</DialogDescription>
                                </DialogHeader>
                                <div className="grid gap-4 py-4">
                                  {item.images.map((image, idx) => (
                                    <div key={idx} className="relative h-60 w-full">
                                      <img
                                        src={image || "/placeholder.svg"}
                                        alt={`${item.name} - —Ñ–æ—Ç–æ ${idx + 1}`}
                                        className="h-full w-full object-cover rounded-md"
                                      />
                                    </div>
                                  ))}
                                </div>
                                <div className="p-4 bg-red-50 border border-red-200 rounded-md text-sm text-red-800">
                                  <strong>FF:</strong> –ù–∞—Ä–∞–∑—ñ —Ü–µ –Ω–µ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω—É—î —á–µ—Ä–µ–∑ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Ñ—ñ–Ω–∞–Ω—Å—É–≤–∞–Ω–Ω—è —Ç–∞ —Å–µ—Ä–≤–µ—Ä—É,
                                  —è–∫—â–æ –≤–∏ —Å–ø—Ä–∞–≤–¥—ñ –∑–∞—Ü—ñ–∫–∞–≤–ª–µ–Ω—ñ —É –∑–∞–ø—É—Å–∫—É —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó,{" "}
                                  <a href="/ff" className="underline font-medium">–∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞</a>
                                </div>
                              </DialogContent>
                            </Dialog>
                          )}
                          {("videoUrl" in item) && item.videoUrl && (
                            <Dialog>
                              <DialogTrigger asChild>
                                <Button variant="outline" className="flex-1 border-orange-200 text-orange-600 hover:bg-orange-50">
                                  <Video className="h-4 w-4 mr-2" />
                                  –í—ñ–¥–µ–æ
                                </Button>
                              </DialogTrigger>
                              <DialogContent className="sm:max-w-md">
                                <DialogHeader>
                                  <DialogTitle>{item.name} - –í—ñ–¥–µ–æ</DialogTitle>
                                  <DialogDescription>–í—ñ–¥–µ–æ –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è —Å—Ç—Ä–∞–≤–∏</DialogDescription>
                                </DialogHeader>
                                <div className="flex flex-col items-center justify-center py-8">
                                  <Video className="h-16 w-16 text-orange-300 mb-4" />
                                  <p className="text-center mb-4">–í—ñ–¥–µ–æ –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è —Å—Ç—Ä–∞–≤–∏ "{item.name}"</p>
                                  <Button
                                    variant="outline"
                                    className="flex items-center border-orange-200 text-orange-600 hover:bg-orange-50"
                                    onClick={() => window.open(item.videoUrl, "_blank")}
                                  >
                                    <ExternalLink className="h-4 w-4 mr-2" />
                                    –í—ñ–¥–∫—Ä–∏—Ç–∏ –≤—ñ–¥–µ–æ
                                  </Button>
                                </div>
                                <div className="p-4 bg-red-50 border border-red-200 rounded-md text-sm text-red-800">
                                  <strong>FF:</strong> –ù–∞—Ä–∞–∑—ñ —Ü–µ –Ω–µ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω—É—î —á–µ—Ä–µ–∑ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Ñ—ñ–Ω–∞–Ω—Å—É–≤–∞–Ω–Ω—è —Ç–∞ —Å–µ—Ä–≤–µ—Ä—É,
                                  —è–∫—â–æ –≤–∏ —Å–ø—Ä–∞–≤–¥—ñ –∑–∞—Ü—ñ–∫–∞–≤–ª–µ–Ω—ñ —É –∑–∞–ø—É—Å–∫—É —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó,{" "}
                                  <a href="/ff" className="underline font-medium">–∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞</a>
                                </div>
                              </DialogContent>
                            </Dialog>
                          )}
                        </div>
                      </CardContent>
                      <CardFooter>
                        <Button className="w-full bg-orange-500 hover:bg-orange-600" onClick={() => setSelectedDish(item)}>
                          –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ
                        </Button>
                      </CardFooter>
                    </Card>
                  ))}
                </div>
              </TabsContent>
            ))}
        </Tabs>
      ) : (
        <Tabs value={selectedBarTab} onValueChange={setSelectedBarTab} className="w-full">
          <TabsList className="grid w-full grid-cols-4 mb-8">
            {barTabs.map(tab => (
              <TabsTrigger key={tab.value} value={tab.value}>{tab.label}</TabsTrigger>
            ))}
          </TabsList>
          {barTabs.map(tab => (
            <TabsContent key={tab.value} value={tab.value}>
              <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                {getFilteredBarItems(tab.value).map(item => {
                  const barItem = item as BarItem
                  return (
                    <Card key={barItem.id} className="hover:shadow-lg transition-shadow border-orange-100">
                      <CardHeader>
                        <div className="flex items-start justify-between">
                          <div>
                            <CardTitle className="text-lg">{barItem.name}</CardTitle>
                            <CardDescription className="text-sm font-medium text-orange-600">{barItem.category}</CardDescription>
                          </div>
                          <div className="text-right">
                            <div className="text-lg font-bold text-orange-600">{barItem.price}</div>
                            <Badge className={getTypeColor(barItem.type)}>{getTypeText(barItem.type)}</Badge>
                          </div>
                        </div>
                      </CardHeader>
                      <CardContent>
                        <p className="text-sm text-gray-700 mb-4">{barItem.description}</p>
                        <div className="space-y-2 mb-4">
                          <div className="flex items-center justify-between text-sm">
                            <span className="text-gray-600">–ú—ñ—Ü–Ω—ñ—Å—Ç—å:</span>
                            <span className="font-medium">{barItem.alcohol}</span>
                          </div>
                          {barItem.country && (
                            <div className="flex items-center justify-between text-sm">
                              <span className="text-gray-600">–ö—Ä–∞—ó–Ω–∞:</span>
                              <span className="font-medium">{barItem.country}</span>
                            </div>
                          )}
                          {barItem.type_detail && (
                            <div className="flex items-center justify-between text-sm">
                              <span className="text-gray-600">–¢–∏–ø:</span>
                              <span className="font-medium">{barItem.type_detail}</span>
                            </div>
                          )}
                          {barItem.ingredients && (
                            <div className="mt-3">
                              <div className="text-xs text-gray-600 mb-1">–Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏:</div>
                              <p className="text-xs text-gray-700">{barItem.ingredients}</p>
                            </div>
                          )}
                        </div>
                        <div className="mb-4">
                          <div className="text-xs text-gray-600 mb-1">–î–æ—Å—Ç—É–ø–Ω—ñ –æ–±'—î–º–∏:</div>
                          <div className="flex flex-wrap gap-1">
                            {barItem.volumes.map((volume, idx) => (
                              <Badge key={idx} variant="outline" className="text-xs">{volume}</Badge>
                            ))}
                          </div>
                        </div>
                      </CardContent>
                      <CardFooter>
                        <Button className="w-full bg-orange-500 hover:bg-orange-600" onClick={() => setSelectedDish(barItem)}>
                          –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ
                        </Button>
                      </CardFooter>
                    </Card>
                  )
                })}
              </div>
            </TabsContent>
          ))}
        </Tabs>
      )}

      {/* Selected Dish/Drink Dialog */}
      {selectedDish && (
        <Dialog open={!!selectedDish} onOpenChange={open => !open && setSelectedDish(null)}>
          <DialogContent className="sm:max-w-xl">
            <DialogHeader>
              <DialogTitle className="flex justify-between items-center">
                <span>{selectedDish.name}</span>
                <span className="text-orange-600">{selectedDish.price}</span>
              </DialogTitle>
              <DialogDescription>
                {"ingredients" in selectedDish && selectedDish.ingredients
                  ? selectedDish.ingredients
                  : "category" in selectedDish
                  ? selectedDish.category
                  : ""}
                {"type" in selectedDish && (
                  <Badge className={`ml-2 ${getTypeColor(selectedDish.type)}`}>{getTypeText(selectedDish.type)}</Badge>
                )}
              </DialogDescription>
            </DialogHeader>
            <div className="grid gap-6">
              {"images" in selectedDish && selectedDish.images && (
                <div className="relative h-60 w-full">
                  <img
                    src={selectedDish.images[0] || "/placeholder.svg"}
                    alt={selectedDish.name}
                    className="h-full w-full object-cover rounded-md"
                  />
                </div>
              )}
              <div>
                <h4 className="font-medium mb-2">–û–ø–∏—Å</h4>
                <p className="text-gray-700">{selectedDish.description}</p>
              </div>
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <h4 className="font-medium mb-2">–î–µ—Ç–∞–ª—ñ</h4>
                  <div className="space-y-2">
                    {"cookingTime" in selectedDish && selectedDish.cookingTime && (
                      <div className="flex items-center text-sm text-gray-600">
                        <Clock className="h-4 w-4 mr-2" />
                        –ß–∞—Å –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è: {selectedDish.cookingTime}
                      </div>
                    )}
                    {"weight" in selectedDish && selectedDish.weight && (
                      <div className="flex items-center text-sm text-gray-600">
                        <Users className="h-4 w-4 mr-2" />
                        –í–∞–≥–∞: {selectedDish.weight}
                      </div>
                    )}
                    {"alcohol" in selectedDish && selectedDish.alcohol && (
                      <div className="flex items-center text-sm text-gray-600">
                        <Wine className="h-4 w-4 mr-2" />
                        –ú—ñ—Ü–Ω—ñ—Å—Ç—å: {selectedDish.alcohol}
                      </div>
                    )}
                    {"country" in selectedDish && selectedDish.country && (
                      <div className="text-sm">
                        <span className="text-gray-600">–ö—Ä–∞—ó–Ω–∞:</span> {selectedDish.country}
                      </div>
                    )}
                  </div>
                </div>
                <div>
                  {"allergens" in selectedDish && selectedDish.allergens && selectedDish.allergens.length > 0 && (
                    <div>
                      <h4 className="font-medium mb-2">–ê–ª–µ—Ä–≥–µ–Ω–∏</h4>
                      <div className="flex flex-wrap gap-1">
                        {selectedDish.allergens.map((allergen, idx) => (
                          <Badge key={idx} className="bg-red-100 text-red-800 text-xs">{allergen}</Badge>
                        ))}
                      </div>
                    </div>
                  )}
                  {"volumes" in selectedDish && selectedDish.volumes && (
                    <div className="mt-4">
                      <h4 className="font-medium mb-2">–î–æ—Å—Ç—É–ø–Ω—ñ –æ–±'—î–º–∏</h4>
                      <div className="flex flex-wrap gap-1">
                        {selectedDish.volumes.map((volume, idx) => (
                          <Badge key={idx} variant="outline" className="text-xs">{volume}</Badge>
                        ))}
                      </div>
                    </div>
                  )}
                  {"warning" in selectedDish && selectedDish.warning && (
                    <div className="mt-4">
                      <div className="flex items-center text-orange-600">
                        <AlertTriangle className="h-4 w-4 mr-1" />
                        <span>{selectedDish.warning}</span>
                      </div>
                    </div>
                  )}
                </div>
              </div>
              <div className="flex space-x-4">
                {"videoUrl" in selectedDish && selectedDish.videoUrl && (
                  <Button
                    variant="outline"
                    className="flex-1 border-orange-200 text-orange-600 hover:bg-orange-50"
                    onClick={() => window.open(selectedDish.videoUrl, "_blank")}
                  >
                    <Video className="h-4 w-4 mr-2" />
                    –î–∏–≤–∏—Ç–∏—Å—è –≤—ñ–¥–µ–æ
                  </Button>
                )}
                <Button className="flex-1 bg-orange-500 hover:bg-orange-600">
                  {"type" in selectedDish ? "–ó–∞–º–æ–≤–∏—Ç–∏ –Ω–∞–ø—ñ–π" : "–î–æ–¥–∞—Ç–∏ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"}
                </Button>
              </div>
              <div className="p-4 bg-red-50 border border-red-200 rounded-md text-sm text-red-800">
                <strong>FF:</strong> –ù–∞—Ä–∞–∑—ñ —Ü–µ –Ω–µ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω—É—î —á–µ—Ä–µ–∑ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Ñ—ñ–Ω–∞–Ω—Å—É–≤–∞–Ω–Ω—è —Ç–∞ —Å–µ—Ä–≤–µ—Ä—É, —è–∫—â–æ –≤–∏ —Å–ø—Ä–∞–≤–¥—ñ
                –∑–∞—Ü—ñ–∫–∞–≤–ª–µ–Ω—ñ —É –∑–∞–ø—É—Å–∫—É —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó,{" "}
                <a href="/ff" className="underline font-medium">–∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞</a>
              </div>
            </div>
          </DialogContent>
        </Dialog>
      )}
    </div>
  )
}